<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>nano1768</title>
  <link href="/default.css" rel="stylesheet" type="text/css" />
</head>
<script type="text/javascript" src="http://www.google.com/jsapi"></script>
    <script type="text/javascript">
      google.load('visualization', '1', {packages: ['gauge']});
    </script>
    
<script type="text/javascript" src="jlib/jajax-1.0.0.js"></script>
<script type="text/javascript" src="jlib/jstr-1.0.0.js"></script>

<script type="text/javascript">
//
// Google Chart API
//
var gauge;
var gaugeData;
var gaugeOptions;
var gaugeOptions;
var resData;
var resource;
var resOptions;
function drawGauge() {
	  //
	  // temperature & humidity
	  //
      gaugeData = google.visualization.arrayToDataTable([
        ['Temp. â„ƒ', 'Humi. %'],
        [0, 0]
      ]);
    
      gauge = new google.visualization.Gauge(document.getElementById('gauge'));
      gaugeOptions = {
          min: 0,
          max: 100,
		  height: 450,
		  width: 500,
		  greenFrom: 10,
		  greenTo: 28,
          yellowFrom: 28,
          yellowTo: 40,
          redFrom: 40,
          redTo: 100,
          minorTicks: 5, 
		  animation:{
        	duration: 1000,
        	easing: 'out'
      	  }
      };
    gauge.draw(gaugeData, gaugeOptions);
	
	//
	// system resource trace
	//
    resData = google.visualization.arrayToDataTable([
        ['Memory', 'CPU', 'Network'],
        [0, 0, 0]
      ]);
	
      resource = new google.visualization.Gauge(document.getElementById('resource'));
      resOptions = {
          min: 0,
          max: 100,
		  height: 250,
		  width: 500,
          yellowFrom: 60,
          yellowTo: 80,
          redFrom: 80,
          redTo: 100,
          minorTicks: 5, 
		  animation:{
        	duration: 1000,
        	easing: 'out'
      	  }
      };
    resource.draw(resData, resOptions);
	
//	sensor_update();
}

google.setOnLoadCallback(drawGauge);

function update_value(temp, humi, mem, cpu, net) {
      gaugeData.setValue(0, 0, temp);
      gaugeData.setValue(0, 1, humi);
      gauge.draw(gaugeData, gaugeOptions);
	  
	  resData.setValue(0, 0, mem);
	  resData.setValue(0, 1, cpu);
	  resData.setValue(0, 2, net);
	  resource.draw(resData, resOptions);
}

// 
// uCXpresso AJAX 
//
var hInterval = 2000;	// Update Interval 2000ms
function sensor_update() {		
        function update(txt){
          var temp, humi, mem, cpu, net;
          temp = parseFloat(getParamValue(txt, 0, ','));    
          humi = parseFloat(getParamValue(txt, 1, ','));  
		  mem = Number(getParamValue(txt, 2, ','));
		  cpu = Number(getParamValue(txt, 3, ','));
		  net = Number(getParamValue(txt, 4, ','));
          update_value(temp, humi, mem, cpu, net);
          setTimeout('sensor_update()',hInterval);
        }
        getDataToCallback("/ajax/temp?", update);
}

setTimeout('sensor_update()',hInterval);
</script>

<body>
<p class="embeda_logo"><img src="Logo1.png" width="149" height="55" /><br />
</p>
<hr>
<table border="1">
  <tr class="caption_txt">
    <td width="150" bgcolor="#6633FF"><a href="index.html">Home</a></td>
    <td width="150" bgcolor="#6633FF"><a href="pinassignment.html">Pin Assignment</a></td>
    <td width="150" bgcolor="#6633FF"><a href="iodemo.shtml">Ajax Demo</a></td>
    <td width="150" bgcolor="#6633FF"><a href="googleapi.shtml">Google API</a></td>
  </tr>
</table>
<hr>
<p class="title_txt">Google API Demo (Live Data:Ajax)</p>
<div id="gauge"></div>
<div id="resource"></div>
</body>
</html>
